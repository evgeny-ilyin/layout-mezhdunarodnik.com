// -----------------------------------------------------------------------------
// This file contains all application-wide Sass variables.
// -----------------------------------------------------------------------------

//** Fonts
/// Headers font family
/// @type List
$family-firs: "TT Firs Neue", "Roboto", "Helvetica", "Open Sans", "Arial", sans-serif !default;

/// Regular font family
/// @type List
$family-hint: "Hint", "Roboto", "Helvetica", "Open Sans", "Arial", sans-serif !default;

/// Monospace font family
/// @type List
// $ff-mono: "Courier New", "DejaVu Sans Mono", "Bitstream Vera Sans Mono", "Monaco", monospace !default;

/// Default font size for rem() function (body font-size 100%)
$browser-context: 16;

//** Colors --var
// Цвета дублируются в _root-vars-map для первичной генерации переменных root-vars.scss
// Можно обойтись без дублирования тут, если вызывать через функцию color(color-name) напрямую из _root-vars-map, но так дольше писать xD

/// Main brand color
/// @type Color
$brand-dark-blue: var(--brand-dark-blue);
$brand-electric: var(--brand-electric);
$brand-red: var(--brand-red);
$brand-light-gray: var(--brand-light-gray);
$accent-siniy: var(--accent-siniy);
$accent-goluboy: var(--accent-goluboy);
$accent-svetlo-goluboy: var(--accent-svetlo-goluboy);
$accent-fioletovyy: var(--accent-fioletovyy);
$accent-sirenevyy: var(--accent-sirenevyy);
$accent-ohro-krasnyy: var(--accent-ohro-krasnyy);
$accent-brusnika: var(--accent-brusnika);
$accent-zelenyy: var(--accent-zelenyy);
$accent-salatovyy: var(--accent-salatovyy);
$accent-malahit: var(--accent-malahit);
$accent-biryuza: var(--accent-biryuza);
$accent-smaragd: var(--accent-smaragd);

$brand-dark-blue-HEX: #101551;

/// Simple colors
/// @type Color
$black: var(--black);
$white: var(--white);
$gray: var(--gray);
$gray-dark: var(--gray-dark);
$red: $brand-red;
$error: $brand-red;

$brand-color-primary: $brand-dark-blue !default;

/// Selection color for imgages
/// @type Color
$selectionBgr: var(--selection-bgr);
$selectionText: var(--selection-text);
$selectionBgrImg: rgba($brand-dark-blue-HEX, 0.5);

/// Text color
/// @type Color
$text-color: $brand-color-primary;

/// Form colors
/// @type Color
$placeholder-color: $gray;
$input-color: $black;

/// Hamburger
/// @type Length
$hamburger-size: 35px;
$hamburger-line: 2px;
$hamburger-color: $brand-color-primary;

//** SVGs --var
$svg-fetch-ring: var(--svg-fetch-ring);
// $svg-arrow-long: var(--svg-arrow-long);
// $svg-arrow-black: var(--svg-arrow-black);
// $svg-arrow-white: var(--svg-arrow-white);
// $svg-angle: var(--svg-angle);
// $svg-close: var(--svg-close);
// $svg-nav-search: var(--svg-nav-search);
// $svg-geo: var(--svg-geo);
// $svg-checked: var(--svg-checked);
// $svg-download: var(--svg-download);

/// Transitions
$transition-default: 250ms ease-in-out;

/// Container's maximum width + paddings
/// @type Length
$min-width: 320px !default;
$max-width: 1440px !default;
$min-padding: 18px !default;
$max-padding: 49px !default;

//** Breakpoints map
/// @prop {String} keys - Keys are identifiers mapped to a given length
/// @prop {Map} values - Values are actual breakpoints expressed in pixels
$breakpoints: (
	"xs": 375px,
	"sm": 425px,
	"xm": 577px,
	"md": 768px,
	"lg": 1024px,
	"xl": 1280px,
	"hd": 1440px,
	"fhd": 1920px,
) !default;

/// Icons base64
// $menu-arrow-white: "data:image/svg+xml;base64,.....";
